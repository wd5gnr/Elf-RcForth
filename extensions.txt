DECIMAL
: NIP SWAP DROP ;
: TUCK SWAP OVER ;
: PICK 2 * 2 + SP@ + @ ;
: 2DUP OVER OVER ;
: 2DROP DROP DROP ;
: 2OVER 3 PICK 3 PICK ;
: 2SWAP >R -ROT R> -ROT ; 
: TRUE 1 ;
: FALSE 0 ;
: J R@ ;
: 1+ 1 + ; 
: 1- 1 - ;
: 2+ 2 + ;
: 2- 2 - ;
: 0= 0 = ;
: NOT 0= ;
: U> SWAP U< ;
: U>= 2DUP U> >R = R> OR ;
: U<= U>= NOT ;
: > SWAP < ;
: <=  > NOT ;
: >=  < NOT ;
: 0> 0 > ;
: 0< 0 < ;
: FREE MEM U. CR ;
: +! SWAP OVER @ + SWAP ! ;
: -! SWAP OVER @ SWAP - SWAP ! ;
: *! SWAP OVER @ * SWAP ! ;
: /! SWAP OVER @ SWAP / SWAP ! ;
: C+! DUP >R C@ + R> C! ;
: C-! DUP >R C@ SWAP - R> C! ;
: @+ DUP @ SWAP 2 + SWAP ;
: ? @ U. ;
: NEG 0 SWAP - ;
: MIN 2DUP > IF SWAP THEN DROP ;
: MAX 2DUP < IF SWAP THEN DROP ;
: UMIN 2DUP U> IF SWAP THEN DROP ;
: UMAX 2DUP U< IF SWAP THEN DROP ;
: ?DUP DUP IF DUP THEN ;
: ABS DUP 0< IF 0 SWAP - THEN ;
: BL 32 ;
: SPACE 32 EMIT ;
: SPACES 0 DO 32 EMIT LOOP ;
: CLS 27 EMIT 91 EMIT 50 EMIT 74 EMIT 27 EMIT 91 EMIT 72 EMIT ;
: LSHIFT DUP WHILE SWAP 2 * SWAP 1 - DUP REPEAT DROP ;
: RSHIFT DUP WHILE SWAP 2 / SWAP 1 - DUP REPEAT DROP ;
: INVERT -1 XOR ;
: SGN DUP IF -32768 AND IF -1 ELSE 1 THEN THEN ;
: MOD DUP ROT DUP ROT / ROT * - ;
: /MOD OVER OVER MOD -ROT / ;
: GETBIT >> 1 AND ;
: SETBIT 1 SWAP << OR ;
: CLRBIT 1 SWAP << -1 XOR AND ;
: TGLBIT 1 SWAP << XOR ;
: BYTESWAP DUP 8 >> SWAP 255 AND 8 << OR ;
: FILL SWAP >R OVER C! DUP 1+ R> 1- CMOVE ;
: ERASE 0 FILL ;
: CLEAR DEPTH WHILE DROP DEPTH REPEAT ;
: .S ." < " DEPTH 8 EMIT . 8 EMIT ." > " DEPTH ?DUP IF DUP 0 DO DUP I - PICK . LOOP DROP THEN ;
: TYPE DUP IF 0 DO DUP C@ EMITP 1 + LOOP ELSE DROP THEN DROP ;
: DUMP CR 5 SPACES 16 0 DO I . LOOP 0 DO CR DUP . 16 0 DO DUP C@ . 1+ LOOP DUP 16 - 16 TYPE 16 +LOOP DROP CR ;
